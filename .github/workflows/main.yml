
name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  HEROKU_APP_NAME: "ci-cd-flask-hello-world"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build the image
      run: docker build -t flask-hello-world .
    - name: run pytest
      run: docker run flask-hello-world pytest test.py
    - name: run flake8 tests
      run: docker run flask-hello-world flake8
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku # set whatever name you want to this step
        id: heroku
        uses: jctaveras/heroku-deploy@v1.0.0 # use the latest version of the action
        with:
          email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
          api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
          app_name: ${{ env.HEROKU_APP_NAME }} # you aplication name
          dockerfile_path: '.' # set the path to the folder where the Dockerfile is located
          process_type: 'web' # Specify the process type you want to build and release